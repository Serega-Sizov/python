# # нахождение индекса
# friend = 'Максим'
# first_letter = friend[0]
# print('Первая буква в имени', first_letter)
# # проверка типа введенных данных
# print(type(friend))
# print(type(first_letter))
# # срез с 1 по 4 элемент
# print(friend[1:4])
# # срез начала по 4 элемент
# print(friend[:4])
# # срез от 3 элемента и до конца
# print(friend[3:])
# # тип среза
# print(type(friend[1:4]))

# friends = 'Максим Леонид'
# print(friends)

# # выведем сколько символов в строке
# print('Сколько символов в строке ', len(friends))

# # поиск по буквы, находит индекс
# print(friends.find('а'))

# # метод split() с пустыми скобками разделяет на 2 строки
# print(friends.split())

# # метод split(';') когда в скобках что-то есть
# fri = 'Сергей;Максим'
# print(fri.split(';'))

# # метод делает все буквы большими
# print(friends.upper())

# # метод делает все буквы маленькими
# print(friends.lower())



# # !!!!!!!!!!!!!!!!!!!!!!форматирование строк!!!!!!!!!!!!!!!!!!
# name = 'Sergey'
# age = 27

# # 1. конкатенация (не удобно читается + надо не забывать про пробелы и переводить числа в строки)
# hello_str = 'Привет ' + name + ' тебе ' + str(age) + ' лет'
# print(hello_str)

# # 2. %
# hello_str = 'Привет %s тебе %d лет'%(name, age)
# print(hello_str)

# # 3. format самый удобный метод, не указываем тип, питон сам за нас это сделает
# hello_str = 'Привет {} тебе {} лет'.format(name, age)
# print(hello_str)


# # ПРИМЕР форматирования строк
# # Дана строка: "Первые 5 мест на соревнованиях: 1.Иванов 2.Петров 3.Сидоров 4.Орлов 5.Соколов"
# # Получить результат - "Поздравляем 1.ИВАНОВ 2.ПЕТРОВ. 3.СИДОРОВ с успехом!"

# top5 = 'Первые 5 мест на соревнованиях: 1.Иванов 2.Петров 3.Сидоров 4.Орлов 5.Соколов'

# # найдем индекс с которого мы будем отрезать нашу строку
# start = top5.find('1')

# # находим конец строки (4 и 5 место нам не подходят)
# end = top5.find('4')

# # делаем срез от 1 до 3
# top3 = top5[start:end]
# print('Поздравляем {} с успехом!'.format(top3.upper()))



# # !!!!!!!!!!!СПИСКИ!!!!!!!!!!!
# # можно объявить пустой список
# empty_list = []

# # можно объявить список и сразу заполнить его элементами
# friends = ['Max', 'Leo', 'Kate']
# print(friends)

# # тип списка - list
# print(type(friends))

# # как и в строке в списке доступны индексы (начинаются с 0)
# print('Второй друг ', friends[1])
# print('Второй друг с конца ', friends[-2])

# # так же можно применить срезы
# print(friends[1:2])
# print(friends[:2])
# print(friends[1:])


# # !!!!!!!!!!!!Функция len и методы списка!!!!!!!!!
# friends = ['Max', 'Leo', 'Kate']
# print(friends)

# # длина списка
# print(len(friends))

# # добавляем новый элемент в список
# friends.append('Ron')
# print(friends)

# # удаление последнего элемента
# print(friends.pop())
# print(friends)

# # очистить список
# friends.clear()
# print(friends)

# # + еще 2 удобных метода удаления элементов из списка
# friends = ['Max', 'Leo', 'Kate']
# friends.append('Ron')
# friends.remove('Leo')
# print(friends)

# # удаляем элемент по индексу
# friends = ['Max', 'Leo', 'Kate']
# del friends[0]
# print(friends)

# # Оператор in
# hero = 'Superman'
# if 'man' in hero:
#     print('есть')

# # так же можно найти через метод find, но это менее удобный вариант
# if hero.find('man') != -1:
#     print('есть')

# #оператор in в списке
# goals = ['учить Python','здоровье','семья']
# if 'заработать бабки' in goals:
#     print('все хорошо, цель поставлена')

# # !!!!!!!!!!!!!!!!!!!!!!ПРИМЕР!!!!!!!!!!!!!!!!!!!!
# # написать программу winners, интерактивное награждение победителей по соревнованию по Python

# print('СОРЕВНОВАНИЯ ПО PYTHON')
# count = int(input('Введите количество участников: '))
# i = count
# # пустой список
# members = []
# # зададим счетчик с конца
# while i > 0:
#     name = input('Кто занял {} место '.format(i))
#     members.append(name)
#     i-=1
# # кто участвовал в соревновании (по алфавиту: нужно дописать sorted)
# print('В соревновании участвовали: ',sorted(members))

# # мы записали людей с конца, нужно перевернуть список
# members.reverse()

# # нам нужны первые 3 места (делаем срез)
# resualt = members[:3]
# resualt = 'Победители {}. Поздравляем!!!'.format(resualt)

# print(resualt)

# input()


# # для разных типов данных можно применять однинаковые функции
# friend_name = 'Max' # тип данных: строка
# friends = ['Anna', 'Leo', 'Kate'] # тип данных: изменяемый список
# roles = ('admin', 'quest', 'user') # тип данных: Кортеж (не изменяемый список)

# # тип данных
# print(type(friend_name))
# print(type(friends))
# print(type(roles))

# # индексация
# print(friend_name[2])
# print(friends[0])
# print(roles[1])

# # срезы
# print(friend_name[:2])
# print(friends[1:])
# print(roles[1:])

# # длина
# print(len(friend_name))
# print(len(friends))
# print(len(roles))

# # !!!!!!!!!!сравнение цикла while и цикла for
# friends = ['Anna', 'Leo', 'Kate']
# # while
# count = 0
# while count < len(friends):
#     friend = friends[count]
#     print(friend)
#     count+=1
# for
# for fren in friends:
#     print(fren)
# print('end')

# !!!!!!!!!!!Функция range!!!!!!!!!!!!!
# numbers = range(15)
# print(numbers) #напишет только диапазон от 0 до 15
# print(list(numbers)) # напишет весь диапазон чисел от 0 до 15(не включая 15)

# # вывести нечетные числа
# print(list(range(1, 20, 2)))
# # через for
# for num in range(1, 20, 2):
#     print(num)

# # примеры работы со словарем
# friend = {
#     'name':'Max',
#     'age': 27 
#     }
# print(friend)
# print(type(friend)) #узнали класс "словарь(dict)"
# print(friend['age'], 'лет') # по ключу получили значение
# # добавление значения в словарь
# friend['has_car'] = True
# print(friend)
# friend['has_car'] = 'mitsubishi'
# print(friend)

# del friend['has_car']
# print(friend)

# # оператор in  в словаре
# if 'age' in friend:
#     print('есть возраст')


# # вариаты перебора словаря циклом for
# friend = {
#     'name':'Max',
#     'age': 27,
#     'has_car': True
#     }
# # по ключам
# for key in friend.keys():
#     print(key) # получаем только ключи методом перебора
#     print(friend[key]) # получаем значения ключей

# for key in friend: # все тоже самое получим если убрать метод .keys()
#     print(key) # получаем только ключи методом перебора
#     print(friend[key]) # получаем значения ключей

# # по значениям
# for val in friend.values():
#     print(val)

# # пары ключ значение
# for item in friend.items(): #делает из списка кортеж
#     print(item)

# for key, val in friend.items():
#     print(key, val)


# #!!!!!!!!!!!!!!!!!!! Множества!!!!!!!!!!!!!!
# cities = {'Las Vegas', 'Paris', 'Moscow', 'Paris', 'Moscow'}
# print(type(cities))
# print(cities)

# # Операции со множествами
# # семейная пара собирается в отпуск
# # каждый из супруг собирает вещи
# # Max взял эти вещи:
# max_things = {'телефон', 'бритва', 'рубашка', 'шорты'}
# # Kate взяла эти вещи:
# kate_things = {'телефон', 'шорты', 'зонтик', 'помада'}
# # какие вещи взяли супруги? делаем через объединение множеств
# print(max_things | kate_things)
# # найти вещи повторяющиеся? делаем через пересечения множеств
# print(max_things & kate_things)
# # какие вещи взял Max, но не взяла Kate? делаем через вычетание множеств
# print(max_things - kate_things)
# # какие вещи взяла Kate, но не взял Max?
# print(kate_things - max_things)






# # !!!!!!!!!!!!!!!!!HOME WORK!!!!!!!!!!!!!!!!!!!!!!!!
# # Задача №1: Даны два произвольные списка. Удалите из первого списка элементы присутствующие во втором списке.
# #            Примечание. Списки создайте вручную.

# # решение №1 МОЕ РЕШЕНИЕ ЧЕРЕЗ МНОЖЕСТВА (работает, но не корректно, если в 1 списке будет много повторяющихся цифр, множество их удалит)
# list1 = [1, 2, 3, 4, 5]
# list2 = [9, 3, 4]
# resualt = set(list1) - set(list2)
# print(list(resualt))

# # решение №2 ИСПОЛЬЗОВАНИЕ ЦИКЛА for (!!!вариант тоже не совсем верный!!!!!)
# a = [1, 1, 1, 2, 3, 4]
# b = [2, 4, 5]
# for number in a:
#     if number in b:
#         a.remove(number)
# print(a)

# # решение №3 ПРАВИЛЬНОЕ ИСПОЛЬЗОВАНИЕ ЦИКЛА for
# a = [1, 1, 1, 2, 2, 2, 3, 4]
# b = [2, 4, 5]
# for number in a[:]:#делаем срез и тем самым мы работаем с копией списка
#     if number in b:
#         a.remove(number)
# print(a)


# # Задача №2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013. Ваша задача — вывести дату в текстовом виде, 
# # например: второе ноября 2013 года. 
# # Склонением пренебречь (2000 года, 2010 года)
# date = input('Введите дату в формате dd.mm.yyyy: ')
# day, mes, year = date.split('.')
# # print(day, mes, year)

# days = {
#     '01':'первое',
#     '02':'второе',
#     '03':'третье',
#     '04':'четвертое',
#     '05':'пятое',
#     '06':'шестое',
#     '07':'седьмое',
#     '08':'восьмое',
#     '09':'девятое',
#     '10':'десятое',
#     '11':'одиннадцатое',
#     '12':'двенадцатое',
#     '13':'тринадцатое',
#     '14':'четырнадцатое',
#     '15':'пятнадцатое',
#     '16':'шестнадцптое',
#     '17':'семнадцатое',
#     '18':'восемнадцатое',
#     '19':'девятнадцатое',
#     '20':'двадцатое',
#     '21':'двадцать первое',
#     '22':'двадцать второе',
#     '23':'двадцать третье',
#     '24':'двадцать четвертое',
#     '25':'двадцать пятое',
#     '26':'двадцать шестое',
#     '27':'двадцать седьмое',
#     '28':'двадцать восьмое',
#     '29':'двадцать девятое',
#     '30':'тридцатое',
#     '31':'тридцать первое',
#         }
# months = {
#     '01':'января',
#     '02':'февраля',
#     '03':'марта',
#     '04':'апреля',
#     '05':'мая',
#     '06':'июня',
#     '07':'июля',
#     '08':'августа',
#     '09':'сентября',
#     '10':'октября',
#     '11':'ноября',
#     '12':'декабря'
#           }

# resualt = f'{days[day]} {months[mes]} {year} года.'
# print(resualt)
# input()

# Задача №3: Дан список заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут только уникальные элементы исходного.
# Примечание. Списки создайте вручную, например так: my_list_1 = [2, 2, 5, 12, 8, 2, 12]
# В этом случае ответ будет: [5, 8]
# numbers = [2, 2, 5, 5, 12, 8, 2, 12, 4, 6, 7, 4]
# resualt = [] # объявляем пустой список
# for number in numbers:    # перебираем наши числа
#     if numbers.count(number) == 1:   #если число входит в наш список == 1 раз, то ...
#         resualt.append(number)  # то мы в результат записываем его
# print(resualt)
